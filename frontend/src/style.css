@tailwind base;
@tailwind components;
@tailwind utilities;


/* 自定义文本选中样式 */
::selection {
    background-color: #6366f1;
    /* a shade of indigo */
    color: white;
}

/* 自定义字体引入 (如果需要使用 "Nunito" 字体，则保留) */
@font-face {
    font-family: "Nunito";
    font-style: normal;
    font-weight: 400;
    src: local(""),
        url("assets/fonts/nunito-v16-latin-regular.woff2") format("woff2");
}


/*
  使用 @layer base 来统一管理所有基础元素的默认样式。
  这是 Tailwind 推荐的做法。
*/
@layer base {

    /*
      为 html 和 body 设置基础样式
      - 移除了所有 text-align: center。
      - 统一了背景色和文字颜色。
      - 使用 @apply font-sans; 来应用系统字体，而不是手动写 font-family。
    */
    html {
        background-color: rgba(27, 38, 54, 1);
    }

    /* 在 body 上应用 select-none，这将作为全局默认设置。
       整个应用的所有元素都会继承这个属性，默认都不可选中。
    */
    body {
        @apply bg-transparent text-white font-sans select-none;
    }

    /* 为需要选中的特定元素重新启用文本选择。
       我们将 input, textarea, 以及 CodeMirror 和 vue-json-pretty 的内容区域组合在一起，
       为它们应用 select-text，允许用户像往常一样选中和复制其中的文本。
    */
    input,
    textarea,
    .cm-content,
    /* 这是 CodeMirror 编辑器内容区的类名 */
    .vjs-value {
        /* 这是 vue-json-pretty 中值的类名 */
        @apply select-text;
    }

    /* textarea 的默认样式
    */
    textarea {
        @apply border border-gray-300 dark:border-gray-600 rounded-md bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-200 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 focus:outline-none;
    }
  :root {
        --background: 0 0% 100%;
        --foreground: 222.2 84% 4.9%;
        --card: 0 0% 100%;
        --card-foreground: 222.2 84% 4.9%;
        --popover: 0 0% 100%;
        --popover-foreground: 222.2 84% 4.9%;
        --primary: 222.2 47.4% 11.2%;
        --primary-foreground: 210 40% 98%;
        --secondary: 210 40% 96.1%;
        --secondary-foreground: 222.2 47.4% 11.2%;
        --muted: 210 40% 96.1%;
        --muted-foreground: 215.4 16.3% 46.9%;
        --accent: 210 40% 96.1%;
        --accent-foreground: 222.2 47.4% 11.2%;
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 210 40% 98%;
        --border: 214.3 31.8% 91.4%;
        --input: 214.3 31.8% 91.4%;
        --ring: 222.2 84% 4.9%;
        --chart-1: 12 76% 61%;
        --chart-2: 173 58% 39%;
        --chart-3: 197 37% 24%;
        --chart-4: 43 74% 66%;
        --chart-5: 27 87% 67%;
        --radius: 0.5rem;
    }
  .dark {
        --background: 222.2 84% 4.9%;
        --foreground: 210 40% 98%;
        --card: 222.2 84% 4.9%;
        --card-foreground: 210 40% 98%;
        --popover: 222.2 84% 4.9%;
        --popover-foreground: 210 40% 98%;
        --primary: 210 40% 98%;
        --primary-foreground: 222.2 47.4% 11.2%;
        --secondary: 217.2 32.6% 17.5%;
        --secondary-foreground: 210 40% 98%;
        --muted: 217.2 32.6% 17.5%;
        --muted-foreground: 215 20.2% 65.1%;
        --accent: 217.2 32.6% 17.5%;
        --accent-foreground: 210 40% 98%;
        --destructive: 0 62.8% 30.6%;
        --destructive-foreground: 210 40% 98%;
        --border: 217.2 32.6% 17.5%;
        --input: 217.2 32.6% 17.5%;
        --ring: 212.7 26.8% 83.9%;
        --chart-1: 220 70% 50%;
        --chart-2: 160 60% 45%;
        --chart-3: 30 80% 55%;
        --chart-4: 280 65% 60%;
        --chart-5: 340 75% 55%;
    }
}

/* 将可复用的组件样式定义在 @layer components 中 */
@layer components {
    .btn {
        @apply px-4 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 flex-shrink-0;
    }

    .btn-primary {
        @apply bg-indigo-600 text-white hover:bg-indigo-700 focus:ring-indigo-500;
    }

    .btn-secondary {
        @apply bg-gray-200 text-gray-800 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 focus:ring-gray-500;
    }

    .input-field {
        @apply w-full p-2 bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 focus:outline-none;
    }

    .radio-field {
        @apply text-indigo-600 focus:ring-indigo-500 border-gray-300 dark:border-gray-600 dark:bg-gray-900 dark:checked:bg-indigo-600;
    }

    .btn {
        @apply px-4 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800;
    }

    .btn-primary {
        @apply bg-indigo-600 text-white hover:bg-indigo-700 focus:ring-indigo-500;
    }

    .btn-secondary {
        @apply bg-gray-200 text-gray-800 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 focus:ring-gray-500;
    }
}

/* 为模态框创建一个更快速、带轻微缩放的“弹出”效果 */
.modal-pop-enter-active,
.modal-pop-leave-active {
    transition: all 150ms ease-out;
}

.modal-pop-enter-from,
.modal-pop-leave-to {
    opacity: 0;
    transform: scale(0.95);
}

/* ======================================================= */
/* ↓↓↓ 全局自定义滚动条样式 ↓↓↓                             */
/* ======================================================= */

/* 为所有滚动条设置一个基础宽度 */
::-webkit-scrollbar {
    width: 12px;
    height: 12px;
}

/* 滚动条的轨道（背景） */
::-webkit-scrollbar-track {
    /* 设置为透明，让它看起来像是悬浮在内容之上 */
    background: transparent;
}

/* 滚动条的滑块（可以拖动的那个部分） */
::-webkit-scrollbar-thumb {
    /* 在亮色模式下，使用一个半透明的深灰色 */
    background-color: rgba(0, 0, 0, 0.25);
    /* 在暗黑模式下，使用一个半透明的浅灰色 */
    @apply dark:bg-gray-600/50;

    /* 设置圆角，让它看起来更现代化 */
    border-radius: 10px;

    /* 关键技巧：添加一个透明的边框，并让背景只裁剪在内容区。
       这会在滑块周围产生一个“内边距”的效果，让滑块看起来更细。
    */
    border: 3px solid transparent;
    background-clip: content-box;
}

/* 当鼠标悬浮在滑块上时，让它变得更不透明，提供交互反馈 */
::-webkit-scrollbar-thumb:hover {
    background-color: rgba(0, 0, 0, 0.4);
    @apply dark:bg-gray-500/80;
}

@layer base {
  * {
    @apply border-border;
    }
  body {
    @apply bg-background text-foreground;
    }
}